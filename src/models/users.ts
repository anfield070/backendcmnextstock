import { Sequelize, DataTypes } from 'sequelize';

export default function(sequelize: Sequelize) {
	const attributes = {
		id: {
			type: DataTypes.INTEGER(11),
			allowNull: false,
			defaultValue: null,
			primaryKey: true,
			autoIncrement: true,
			comment: null,
			field: 'id',
		},
		username: {
			type: DataTypes.STRING(250),
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'username',
		},
		password: {
			type: DataTypes.STRING(250),
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'password',
		},
		name: {
			type: DataTypes.STRING(255),
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'name',
		},
		created_at: {
			type: DataTypes.DATE,
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'created_at',
		},
		updated_at: {
			type: DataTypes.DATE,
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'updated_at',
		},
		created_by: {
			type: DataTypes.INTEGER(255),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'created_by',
		},
		updated_by: {
			type: DataTypes.INTEGER(11),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'updated_by',
		},
		phone: {
			type: DataTypes.STRING(255),
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'phone',
		},
		idline: {
			type: DataTypes.STRING(255),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'idline',
		},
		otp: {
			type: DataTypes.STRING(255),
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'otp',
		},
		email: {
			type: DataTypes.STRING(255),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'email',
		},
		bank_id: {
			type: DataTypes.INTEGER(11),
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'bank_id',
		},
		payrate_id: {
			type: DataTypes.INTEGER(11),
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'payrate_id',
		},
		agent: {
			type: DataTypes.INTEGER(255),
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'agent',
		},
		lv: {
			type: DataTypes.INTEGER(255),
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'lv',
		},
		date_open: {
			type: DataTypes.TIME,
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'date_open',
		},
		date_close: {
			type: DataTypes.TIME,
			allowNull: false,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'date_close',
		},
		last_ip: {
			type: DataTypes.STRING(255),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'last_ip',
		},
		last_login: {
			type: DataTypes.STRING(255),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'last_login',
		},
		status_lock: {
			type: DataTypes.STRING(20),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'status_lock',
		},
		status_user: {
			type: DataTypes.STRING(20),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'status_user',
		},
		status_api: {
			type: DataTypes.STRING(20),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'status_api',
		},
		credit: {
			type: DataTypes.DECIMAL,
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'credit',
		},
		credit_award: {
			type: DataTypes.DECIMAL,
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'credit_award',
		},
		codepromotion: {
			type: DataTypes.STRING(255),
			allowNull: true,
			defaultValue: null,
			primaryKey: false,
			autoIncrement: false,
			comment: null,
			field: 'codepromotion',
		},
	};
	const options = {
		tableName: 'users',
		comment: '',
		indexes: [],
	};
	const UsersModel = sequelize.define('users_model', attributes, options);
	return UsersModel;
}
